---
- name: "Install utils"
  hosts: "all"
  become: true

  tasks:
    - name: Set timezone Moscow
      community.general.timezone:
        name: Europe/Moscow

    - name: "Add epel-release repo"
      ansible.builtin.yum:
        name: epel-release
        state: present

    - name: "Install nfs-utils"
      ansible.builtin.yum:
       name: "nfs-utils"
       state: present

    - name: "Install borgbackup"
      ansible.builtin.yum:
        name: borgbackup
        state: present

    - name: "Add user borg"
      user: 
        name: borg
        shell: /bin/bash
        append: yes

- name: "Settings backup-client"
  hosts: "clients"
  become: true

  tasks:

    - name: "Ssh-keygen"
      ansible.builtin.user:
        name: root
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa

    - name: "Copy ssh-key on server"
      fetch:
        src: /root/.ssh/id_rsa.pub
        dest: ./key/id_rsa.pub
        flat: true

- name: "Settings backup-server"
  hosts: "backup_server"
  become: true

  tasks:
    - name: "Create filesystem ext4"
      community.general.filesystem:
        fstype: ext4
        dev: /dev/sdb

    - name: "Mount up device by label"
      ansible.posix.mount:
        path: /var/backup
        src: /dev/sdb
        fstype: ext4
        state: mounted

    - name: "Creates directory /var/backup"
      ansible.builtin.file:
        path: /var/backup
        owner: borg
        group: borg
        mode: '0777'
        state: directory

    - name: "Preparing the repository"
      ansible.builtin.file:
        state: absent
        path: /var/backup/lost+found

    - name: "Create directory .ssh"
      ansible.builtin.file:
        path: /home/borg/.ssh/
        owner: borg
        group: borg
        mode: '0700'
        state: directory
    
    - name: "Create file-key .ssh"
      ansible.builtin.file:
        path: /home/borg/.ssh/authorized_keys
        owner: borg
        group: borg
        mode: '0600'
        state: touch

    - name: "Copy ssh-key"
      copy:
        src: ./key/id_rsa.pub
        dest: /home/borg/.ssh/borg.pub

    - name: "Add ssh-key into authorized_keys"
      shell: "cat /home/borg/.ssh/borg.pub >> /home/borg/.ssh/authorized_keys"
      
- name: "Init borg-repo on backup-client"
  hosts: "clients"
  become: true

  tasks:
    - name: "Add config file for .ssh"
      ansible.builtin.file:
        path: /root/.ssh/config
        owner: root
        group: root
        mode: '0644'
        state: touch

    - name: "Setting config file .ssh/config"
      shell: "echo 'Host *\n  StrictHostKeyChecking no\n  LogLevel quiet' > /root/.ssh/config"

    - name: "Restart ssh"
      service:
        name: sshd
        state: restarted

    - name: "Mount remote directory /var/backup"
      shell: "borg init --encryption=repokey borg@192.168.11.160:/var/backup/"
      environment:
        BORG_PASSPHRASE: Otus1234

    - name: "Create service borgbackup"
      ansible.builtin.copy:
        src: ./files/borg-backup.service
        dest: /etc/systemd/system/borg-backup.service

    - name: "Create timer borgbackup"
      ansible.builtin.copy:
        src: ./files/borg-backup.timer
        dest: /etc/systemd/system/borg-backup.timer

    - name: "Enabled borg-backup.timer"
      ansible.builtin.service:
        name: borg-backup.timer
        enabled: yes

    - name: "Started borg-backup.timer"
      ansible.builtin.service:
        name: borg-backup.timer
        state: started
